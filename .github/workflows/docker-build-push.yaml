name: Build and Push Docker Image

on:
  push:
    branches:
      - main # Trigger on push to main branch (customize as needed)
  pull_request:
    branches:
      - main # Optional: Build on PRs too
  release:
    types: [published] # Trigger on release publish

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 2. Set up Docker Buildx (for multi-platform builds, optional)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Log in to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # 4. Extract version from tag if this is a release
      - name: Extract tag name
        id: extract_tag
        if: github.event_name == 'release'
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      # 5. Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Build context (typically root where Dockerfile is)
          file: ./Dockerfile # Path to Dockerfile
          push: ${{ github.event_name != 'pull_request' }} # Push only on push, not PR
          tags: |
            ${{ github.event_name == 'release' && format('ghcr.io/{0}:{1}', github.repository, steps.extract_tag.outputs.TAG_NAME) || format('ghcr.io/{0}:latest', github.repository) }}
            ${{ github.event_name != 'release' && format('ghcr.io/{0}:{1}', github.repository, github.sha) || '' }}
            ${{ github.event_name == 'release' && format('ghcr.io/{0}:latest', github.repository) || '' }}
          platforms: linux/amd64,linux/arm64/v8
